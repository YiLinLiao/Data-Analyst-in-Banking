
/**********************************************************/
/*      ANALYSTS:       Yilin Liao
/*      DATE:           02/05/2023
/*      DESCRIPTION:    

/*      ANALYST COMMENTS:
        DAILY MI REPORT, THIS COVERS DAILY METRICS ON LOGINS, 
        CURRENT ACCOUNT OPENING, POS DEBIT AND ATM TRANS. 
        THIS REPORT IS COMPILED USING SAS VIYA AND SENT TO EXCO MEMBERS EACH DAY.            
***********************************************************/


    /********************************************************************************
        STEP ONE:   CREATE REPORTING CALENDAR - TO BE DROPPED AT END OF SCRIPT
    *********************************************************************************/


CREATE TABLE LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP AS
(
SELECT 

        (CALENDAR_DATE)  AS  CALENDAR_DATE                         
        ,'WEEK_'||Trim(WEEK_OF_YEAR) AS WEEK_OF_YEAR
        ,To_Char(CALENDAR_DATE,'Month') AS  CALENDAR_MTH
        ,To_Char(CALENDAR_DATE,'MM-YYYY') AS CALENDAR_MTH_YEAR
        ,'Q'||Trim(QUARTER_OF_YEAR) AS CALENDAR_QUARTER                
        ,YEAR_OF_CALENDAR AS CALENDAR_YEAR
        ,(Last_Day(CALENDAR_DATE))AS EOM_DTE
        ,(EOM_DTE - Extract (DAY From EOM_DTE)+1)AS SOM_DTE

        FROM     SYS_CALENDAR.CALENDAR CAL

        WHERE   Extract (YEAR From CAL.CALENDAR_DATE) >= '2023'
        AND     CAL.CALENDAR_DATE <= (Current_Date -1)

) WITH DATA AND STATISTICS PRIMARY INDEX(CALENDAR_DATE);



    /********************************************************************************
        STEP TWO:   INSERT SCRIPT - LOADS CURRENT_DATE -1 
    *********************************************************************************/
    

    --DELETE LAB_T_ORION_REPORTING_DEV.EITS_DAILY_MI_V2
INSERT INTO LAB_T_ORION_REPORTING_DEV.EITS_DAILY_MI_V2

SELECT 

    DISTINCT (CAL.CALENDAR_DATE) AS REPORTING_DATE
    ,WEEK_OF_YEAR
    ,CALENDAR_MTH
    ,CALENDAR_QUARTER
    ,CALENDAR_YEAR
    ,'DEBIT CARD TRANSACTIONS (ATM)' AS METRIC_TYPE

    ,Cast(CASE  
        WHEN TXN_CHANNEL_CODE = 'ATM' AND REVERSAL_IND = 0 THEN 'ATM DAILY TRANSACTION TOTAL'
        END AS VARCHAR (120)) AS METRIC_NAME

    
    ,Cast('?' AS VARCHAR (120)) AS TP2_BUSIEST_HOURS
    ,Count(*) AS METRIC_NUM

    FROM DWP00V_TPII_ODS_CURRENT.TP2_AUTH_LOG   TP2

    INNER JOIN LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP                  CAL
    ON CAL.CALENDAR_DATE = Cast (TP2.SYSTEM_TIMESTAMP AS DATE)


    WHERE METRIC_NAME IS NOT NULL
    
--  AND REPORTING_DATE = (SELECT MAX(CALENDAR_DATE) FROM LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP)
    AND REPORTING_DATE BETWEEN '2024-05-10' AND '2024-05-12'
    


    GROUP BY 1,2,3,4,5,6,7
    
UNION ALL

SELECT 

    DISTINCT (CAL.CALENDAR_DATE) AS REPORTING_DATE
    ,WEEK_OF_YEAR
    ,CALENDAR_MTH
    ,CALENDAR_QUARTER
    ,CALENDAR_YEAR
    ,'DEBIT CARD TRANSACTIONS (POS)' AS METRIC_TYPE

    ,CASE   
        WHEN TXN_CHANNEL_CODE = 'POS' AND REVERSAL_IND = 0 THEN 'POS DAILY TRANSACTION TOTAL'
    END AS METRIC_NAME

    
    ,Cast('?' AS VARCHAR (120)) AS TP2_BUSIEST_HOURS
    ,Count(*) AS METRIC_NUM

    FROM DWP00V_TPII_ODS_CURRENT.TP2_AUTH_LOG   TP2

    INNER JOIN LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP                  CAL
    ON CAL.CALENDAR_DATE = Cast (TP2.SYSTEM_TIMESTAMP AS DATE)


    WHERE METRIC_NAME IS NOT NULL
    
    --AND REPORTING_DATE = (SELECT MAX(CALENDAR_DATE) FROM LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP)
    AND REPORTING_DATE BETWEEN '2024-05-10' AND '2024-05-12'

    GROUP BY 1,2,3,4,5,6,7

UNION ALL

    SELECT 

     REPORTING_DATE
    ,WEEK_OF_YEAR
    ,CALENDAR_MTH
    ,CALENDAR_QUARTER
    ,CALENDAR_YEAR
    ,METRIC_TYPE
    ,METRIC_NAME
    
    ,TP2_BUSIEST_HOURS
    ,ZeroIfNull(POS_COUNT) AS METRIC_NUM

    FROM 
        (

            SELECT 

                DISTINCT (CAL.CALENDAR_DATE) AS REPORTING_DATE          
                ,WEEK_OF_YEAR           
                ,CALENDAR_MTH
                ,CALENDAR_QUARTER
                ,CALENDAR_YEAR
                ,'DEBIT CARD TRANSACTIONS (POS)' AS METRIC_TYPE
                ,'POS BUSIEST HOURS' AS METRIC_NAME
                ,Trim(Extract(HOUR From SYSTEM_TIMESTAMP)||':00' ||' - '|| Trim (Extract(HOUR From SYSTEM_TIMESTAMP)+ 1)||':00') AS TP2_BUSIEST_HOURS
                ,Sum (CASE WHEN TXN_CHANNEL_CODE = 'POS' AND REVERSAL_IND = 0 THEN 1 END) AS POS_COUNT

            FROM        DWP00V_TPII_ODS_CURRENT.TP2_AUTH_LOG    TP2

            INNER JOIN  LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP                 CAL
            ON          CAL.CALENDAR_DATE = Cast (TP2.SYSTEM_TIMESTAMP AS DATE)
            
        --  WHERE REPORTING_DATE = (SELECT MAX(CALENDAR_DATE) FROM LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP) 
                WHERE REPORTING_DATE BETWEEN '2024-05-10' AND '2024-05-12'
            
            GROUP BY 1,2,3,4,5,6,7,8
        ) B

    QUALIFY Row_Number() Over (PARTITION BY REPORTING_DATE ORDER BY POS_COUNT DESC) IN (1,2,3)
    
UNION ALL

SELECT 

     REPORTING_DATE
    ,WEEK_OF_YEAR
    ,CALENDAR_MTH
    ,CALENDAR_QUARTER
    ,CALENDAR_YEAR
    ,METRIC_TYPE
    ,METRIC_NAME
    ,TP2_BUSIEST_HOURS
    ,ZeroIfNull(ATM_COUNT) AS METRIC_NUM

    FROM 
        (

            SELECT 

                DISTINCT (CAL.CALENDAR_DATE) AS REPORTING_DATE          
                ,WEEK_OF_YEAR           
                ,CALENDAR_MTH
                ,CALENDAR_QUARTER
                ,CALENDAR_YEAR
                ,'DEBIT CARD TRANSACTIONS (ATM)' AS METRIC_TYPE
                ,'ATM BUSIEST HOURS' AS METRIC_NAME
                ,Trim(Extract(HOUR From SYSTEM_TIMESTAMP)||':00' ||' - '|| Trim (Extract(HOUR From SYSTEM_TIMESTAMP)+ 1)||':00') AS TP2_BUSIEST_HOURS
                ,Sum (CASE WHEN TXN_CHANNEL_CODE = 'ATM' AND REVERSAL_IND = 0 THEN 1 END) AS ATM_COUNT

            FROM        DWP00V_TPII_ODS_CURRENT.TP2_AUTH_LOG    TP2

            INNER JOIN  LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP                     CAL
            ON          CAL.CALENDAR_DATE = Cast (TP2.SYSTEM_TIMESTAMP AS DATE)
            
            --WHERE REPORTING_DATE  = (SELECT MAX(CALENDAR_DATE) FROM LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP)
                WHERE REPORTING_DATE BETWEEN '2024-05-10' AND '2024-05-12'
            
        
            

            GROUP BY 1,2,3,4,5,6,7,8
        ) B

    QUALIFY Row_Number() Over (PARTITION BY REPORTING_DATE ORDER BY ATM_COUNT DESC) IN (1,2,3)
    
UNION ALL
    
    SELECT 
        
        DISTINCT (CAL.CALENDAR_DATE) AS REPORTING_DATE
        ,WEEK_OF_YEAR
        ,CALENDAR_MTH
        ,CALENDAR_QUARTER
        ,CALENDAR_YEAR
        
        ,'UNIBANKS ACCOUNT OPENING' AS METRIC_TYPE
        
        ,Cast(CASE  
            WHEN BATYP_ANATURE = 'S' AND ACCT_OPEN_DATE = CAL.CALENDAR_DATE THEN 'VARIABLE (INSTANT ACCESS) OPENING'
            WHEN BATYP_ANATURE = 'V' AND ACCT_OPEN_DATE = CAL.CALENDAR_DATE THEN 'FIXED TERM ACCOUNTS OPENING'
            
        
        END AS VARCHAR (120)) AS METRIC_NAME
        
        ,Cast('?' AS VARCHAR (120)) AS TP2_BUSIEST_HOURS
        
        ,Count (*) AS METRIC_NUM
            
        FROM        DWP00V_UNIBANKS_ODS_CURRENT.ACCT        ACC
        
        INNER JOIN  DWP00V_UNIBANKS_ODS_CURRENT.BATYP       BATYP   
        ON          ACC.ACCT_ATYPE = BATYP.BATYP_ATYPE
        
        INNER JOIN  LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP                         CAL
        --ON            REPORTING_DATE = (SELECT MAX(CALENDAR_DATE) FROM LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP)
            ON REPORTING_DATE BETWEEN '2024-05-10' AND '2024-05-12'
        
        
        
        WHERE METRIC_NAME IS NOT NULL
        GROUP BY 1,2,3,4,5,6,7
    
    UNION ALL
    
    SELECT 
        
        DISTINCT (CAL.CALENDAR_DATE) AS REPORTING_DATE
        ,WEEK_OF_YEAR
        ,CALENDAR_MTH
        ,CALENDAR_QUARTER
        ,CALENDAR_YEAR
        
        ,'UNIBANKS ACCOUNT CLOSING' AS METRIC_TYPE
        
        ,Cast(CASE  
            
            WHEN BATYP_ANATURE = 'S' AND ACCT_CLOSE_DATE = CAL.CALENDAR_DATE THEN 'VARIABLE (INSTANT ACCESS) CLOSING'
            WHEN BATYP_ANATURE = 'V' AND ACCT_CLOSE_DATE = CAL.CALENDAR_DATE THEN 'FIXED TERM ACCOUNTS CLOSING'
        
        END AS VARCHAR (120)) AS METRIC_NAME
        
        ,Cast('?' AS VARCHAR (120)) AS TP2_BUSIEST_HOURS
        
        ,Count (*) AS METRIC_NUM
            
        FROM        DWP00V_UNIBANKS_ODS_CURRENT.ACCT        ACC
        
        INNER JOIN  DWP00V_UNIBANKS_ODS_CURRENT.BATYP       BATYP   
        ON          ACC.ACCT_ATYPE = BATYP.BATYP_ATYPE
        
        INNER JOIN  LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP                         CAL
        --ON            REPORTING_DATE = (SELECT MAX(CALENDAR_DATE) FROM LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP)
            ON REPORTING_DATE BETWEEN '2024-05-10' AND '2024-05-12'
        
        
        
        WHERE METRIC_NAME IS NOT NULL
        GROUP BY 1,2,3,4,5,6,7
    
    UNION ALL
    
    SELECT 
        
        DISTINCT (CAL.CALENDAR_DATE) AS REPORTING_DATE
        ,WEEK_OF_YEAR
        ,CALENDAR_MTH
        ,CALENDAR_QUARTER
        ,CALENDAR_YEAR
        
        ,'UNIBANKS LOAN OPENING' AS METRIC_TYPE
        
        ,Cast(CASE  
            
            WHEN BATYP_ANATURE = 'A' AND ACCT_OPEN_DATE = CAL.CALENDAR_DATE THEN 'LOANS OPENING'
        
        END AS VARCHAR (120)) AS METRIC_NAME
        
        ,Cast('?' AS VARCHAR (120)) AS TP2_BUSIEST_HOURS
        
        ,Count (*) AS METRIC_NUM
            
        FROM        DWP00V_UNIBANKS_ODS_CURRENT.ACCT        ACC
        
        INNER JOIN  DWP00V_UNIBANKS_ODS_CURRENT.BATYP       BATYP   
        ON          ACC.ACCT_ATYPE = BATYP.BATYP_ATYPE
        
        INNER JOIN  LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP                         CAL
        --ON            REPORTING_DATE = (SELECT MAX(CALENDAR_DATE) FROM LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP)
            ON REPORTING_DATE BETWEEN '2024-05-10' AND '2024-05-12'
        
        
        
        WHERE METRIC_NAME IS NOT NULL
        GROUP BY 1,2,3,4,5,6,7
    
    UNION ALL
    
    SELECT 
        
        DISTINCT (CAL.CALENDAR_DATE) AS REPORTING_DATE
        ,WEEK_OF_YEAR
        ,CALENDAR_MTH
        ,CALENDAR_QUARTER
        ,CALENDAR_YEAR
        
        ,'UNIBANKS LOAN CLOSING' AS METRIC_TYPE
        
        ,Cast(CASE  
            
            WHEN BATYP_ANATURE = 'A' AND ACCT_CLOSE_DATE = CAL.CALENDAR_DATE THEN 'LOANS CLOSING'
        
        END AS VARCHAR (120)) AS METRIC_NAME
        
        ,Cast('?' AS VARCHAR (120)) AS TP2_BUSIEST_HOURS
        
        ,Count (*) AS METRIC_NUM
            
        FROM        DWP00V_UNIBANKS_ODS_CURRENT.ACCT        ACC
        
        INNER JOIN  DWP00V_UNIBANKS_ODS_CURRENT.BATYP       BATYP   
        ON          ACC.ACCT_ATYPE = BATYP.BATYP_ATYPE
        
        INNER JOIN  LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP                         CAL
        --ON            REPORTING_DATE = (SELECT MAX(CALENDAR_DATE) FROM LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP)
            ON REPORTING_DATE BETWEEN '2024-05-10' AND '2024-05-12'
        
        WHERE METRIC_NAME IS NOT NULL
        GROUP BY 1,2,3,4,5,6,7
    
    UNION ALL
    
    
    SELECT 
        
        DISTINCT (CAL.CALENDAR_DATE) AS  REPORTING_DATE
        ,WEEK_OF_YEAR
        ,CALENDAR_MTH
        ,CALENDAR_QUARTER
        ,CALENDAR_YEAR
        ,'OPEN24 & MOBILE APP' AS METRIC_TYPE
        ,'MOBILE APP UNIQUE CUSTOMER LOGINS' AS METRIC_NAME
        ,Cast('?' AS VARCHAR (120)) AS TP2_BUSIEST_HOURS
        ,Count (DISTINCT T1.CARDNO) AS METRIC_NUM
            
        FROM        DWP00V_03_ORION.O24NAVIGATION                   NAV

        LEFT JOIN   DWP00V_03_ORION.O24PAGES                        SOURCE_PAGE 
        ON          NAV.PAGE_ID_SOURCE  = SOURCE_PAGE.PAGE_ID

        LEFT JOIN   DWP00V_03_ORION.O24CUSTSESSION                  CUST_SESSION 
        ON          NAV.SESSIONID   = CUST_SESSION.SESSIONID 
        
        LEFT JOIN   DWP00V_03_ORION.O24CUSTDETAIL                   T1
        ON          CUST_SESSION.CIF        =   T1.CIF

        INNER JOIN  LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP                                 CAL
        ON          CAL.CALENDAR_DATE = NAV.START_DATE

        WHERE NAV.ACTION = 'VALIDATE PAGE MOVEMENT'
        AND SOURCE_PAGE.PAGE IN('MP-LOGIN-STEP-2', 'MT-LOGIN-STEP-2')
        --AND NAV.START_DATE  = (SELECT MAX(CALENDAR_DATE) FROM LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP) 
            AND NAV.START_DATE BETWEEN '2024-05-10' AND '2024-05-12'
        GROUP BY 1,2,3,4,5,7
        
        
    UNION ALL
    
        
    SELECT
        
        DISTINCT (CAL.CALENDAR_DATE) AS  REPORTING_DATE
        ,WEEK_OF_YEAR
        ,CALENDAR_MTH
        ,CALENDAR_QUARTER
        ,CALENDAR_YEAR
        ,'OPEN24 & MOBILE APP' AS METRIC_TYPE
        ,'MOBILE APP LOGINS' AS METRIC_NAME
        ,Cast('?' AS VARCHAR (120)) AS TP2_BUSIEST_HOURS
        ,Count (DISTINCT (NAV.SESSIONID)) AS METRIC_NUM
            

        FROM        DWP00V_03_ORION.O24NAVIGATION                   NAV

        LEFT JOIN   DWP00V_03_ORION.O24PAGES                        SOURCE_PAGE 
        ON          NAV.PAGE_ID_SOURCE  = SOURCE_PAGE.PAGE_ID

        LEFT JOIN   DWP00V_03_ORION.O24CUSTSESSION                  CUST_SESSION 
        ON          NAV.SESSIONID   = CUST_SESSION.SESSIONID 
        
        LEFT JOIN   DWP00V_03_ORION.O24CUSTDETAIL                   T1
        ON          CUST_SESSION.CIF        =   T1.CIF

        INNER JOIN  LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP                                 CAL
        ON          CAL.CALENDAR_DATE = NAV.START_DATE

        WHERE NAV.ACTION = 'VALIDATE PAGE MOVEMENT'
        AND SOURCE_PAGE.PAGE IN('MP-LOGIN-STEP-2', 'MT-LOGIN-STEP-2')
        --AND NAV.START_DATE  = (SELECT MAX(CALENDAR_DATE) FROM LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP)    
        AND NAV.START_DATE BETWEEN '2024-05-10' AND '2024-05-12'
        GROUP BY 1,2,3,4,5,6,7
        
    
    UNION ALL
--DESKTOP

SELECT 
        
        
        DISTINCT (CAL.CALENDAR_DATE) AS  REPORTING_DATE
        ,WEEK_OF_YEAR
        ,CALENDAR_MTH
        ,CALENDAR_QUARTER
        ,CALENDAR_YEAR
        ,'OPEN24 & MOBILE APP' AS METRIC_TYPE
        ,'OPEN24 UNIQUE CUSTOMER DESKTOP LOGINS' AS METRIC_NAME
        ,Cast('?' AS VARCHAR (120)) AS TP2_BUSIEST_HOURS
        ,Count (DISTINCT T1.REGISTRATIONNUMBER) AS METRIC_NUM
            
        FROM        DWP00V_03_ORION.O24NAVIGATION                   NAV

        LEFT JOIN   DWP00V_03_ORION.O24PAGES                        SOURCE_PAGE 
        ON          NAV.PAGE_ID_SOURCE  = SOURCE_PAGE.PAGE_ID
        LEFT JOIN   DWP00V_03_ORION.O24CUSTSESSION                  CUST_SESSION 
        ON          NAV.SESSIONID   = CUST_SESSION.SESSIONID 
        

        LEFT JOIN   DWP00V_03_ORION.O24CUSTDETAIL                   T1
        ON          CUST_SESSION.CIF        =   T1.CIF

        INNER JOIN  LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP                                 CAL
        ON          CAL.CALENDAR_DATE = NAV.START_DATE

        WHERE       NAV.PAGE_ID_SOURCE = 126                         --SOURCEWEBPAGE = '/LOGIN/STEP2'
        AND         NAV.PAGE_ID_DEST IN (753)            --DESTWEBPAGE = '/SCALOGIN/SCANONSMART'  
        --AND         NAV.START_DATE = (SELECT MAX(CALENDAR_DATE) FROM LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP)
        AND NAV.START_DATE BETWEEN '2024-05-10' AND '2024-05-12'
        
GROUP BY 1,2,3,4,5,7

UNION ALL

    SELECT 
        
        
        DISTINCT (CAL.CALENDAR_DATE) AS  REPORTING_DATE
        ,WEEK_OF_YEAR
        ,CALENDAR_MTH
        ,CALENDAR_QUARTER
        ,CALENDAR_YEAR
        ,'OPEN24 & MOBILE APP' AS METRIC_TYPE
        ,'OPEN24 DESKTOP LOGINS' AS METRIC_NAME
        ,Cast('?' AS VARCHAR (120)) AS TP2_BUSIEST_HOURS
        ,Count (DISTINCT (NAV.SESSIONID)) AS METRIC_NUM
        
            
        FROM        DWP00V_03_ORION.O24NAVIGATION                   NAV

        LEFT JOIN   DWP00V_03_ORION.O24PAGES                        SOURCE_PAGE 
        ON          NAV.PAGE_ID_SOURCE  = SOURCE_PAGE.PAGE_ID
        LEFT JOIN   DWP00V_03_ORION.O24CUSTSESSION                  CUST_SESSION 
        ON          NAV.SESSIONID   = CUST_SESSION.SESSIONID 
        

        LEFT JOIN   DWP00V_03_ORION.O24CUSTDETAIL                   T1
        ON          CUST_SESSION.CIF        =   T1.CIF

        INNER JOIN  LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP                                 CAL
        ON          CAL.CALENDAR_DATE = NAV.START_DATE

        WHERE       NAV.PAGE_ID_SOURCE = 126                         --SOURCEWEBPAGE = '/LOGIN/STEP2'
        AND         NAV.PAGE_ID_DEST IN (753)            --DESTWEBPAGE = '/SCALOGIN/SCANONSMART'    
        --AND         NAV.START_DATE = (SELECT MAX(CALENDAR_DATE) FROM LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP)
        AND NAV.START_DATE BETWEEN '2024-05-10' AND '2024-05-12'

            
GROUP BY 1,2,3,4,5,6,7
    
    
    
    UNION ALL

    
    SELECT

    DISTINCT REPORTING_DATE
    ,WEEK_OF_YEAR
    ,CALENDAR_MTH
    ,CALENDAR_QUARTER
    ,CALENDAR_YEAR
    ,'SEPA PAYMENTS' AS METRIC_TYPE

    ,CASE 
        WHEN CLASSTYPE = 'INBOUND'  AND OPROC_TRAN_TYPE = 'CDT' THEN 'NO OF INCOMING CREDITS'
        WHEN CLASSTYPE = 'OUTBOUND' AND OPROC_TRAN_TYPE = 'CDT' THEN 'NO OF OUTGOING CREDITS'
        WHEN CLASSTYPE = 'INBOUND'  AND OPROC_TRAN_TYPE = 'DBT' THEN 'NO OF INCOMING DEBITS'
        WHEN CLASSTYPE = 'OUTBOUND' AND OPROC_TRAN_TYPE = 'DBT' THEN 'NO OF OUTGOING DEBITS'
        
    END AS METRIC_NAME
    
    ,Cast('?' AS VARCHAR (120)) AS TP2_BUSIEST_HOURS

    ,Count (*) AS METRIC_NUM


FROM 

(

SELECT
     CAL.CALENDAR_DATE AS REPORTING_DATE
    ,WEEK_OF_YEAR
    ,CALENDAR_MTH
    ,CALENDAR_QUARTER
    ,CALENDAR_YEAR
    ,OPROC_TRAN_TYPE
    ,OPROC_SEPA_TYPE
    ,OPROC_AMOUNT
    ,OPROC_SEPA_DATE
    ,OPROC_PROCDATE
    ,SEPAS_STLMNT_DTE
        ,CASE
            WHEN OPROC_SEPA_TYPE = 'ICTFR' 
                THEN 'INBOUND'
            WHEN OPROC_SEPA_TYPE = 'ISCCT' 
                THEN 'INTERNAL'
            WHEN OPROC_SEPA_TYPE = 'OBPAY' 
                THEN 'OUTBOUND'
            WHEN OPROC_SEPA_TYPE = 'OEXCT' 
                THEN 'OUTBOUND'
            WHEN OPROC_SEPA_TYPE = 'OSCCT' 
                THEN 'OUTBOUND'
            WHEN OPROC_SEPA_TYPE = 'OSOCT' 
                THEN 'OUTBOUND'
            WHEN OPROC_SEPA_TYPE = 'IDSDD' 
                THEN 'INBOUND'
            WHEN OPROC_SEPA_TYPE = 'ISCDD' 
                THEN 'INTERNAL'
            WHEN OPROC_SEPA_TYPE = 'OSCDD' 
                THEN 'OUTBOUND'
            ELSE 'UNKNOWN' 
        END AS CLASSTYPE

    FROM        DWP00V_UNIBANKS_ODS_CURRENT.OPROC   T1

    INNER JOIN  DWP00V_UNIBANKS_ODS_CURRENT.SEPAS   T2
    ON T1.OPROC_SEPA_DATE = T2.SEPAS_SEPA_DATE
    AND T1.OPROC_SEPA_TYPE = T2.SEPAS_SEPA_TYPE 
    AND T1.OPROC_SEPA_SEQNO = T2.SEPAS_SEPA_SEQNO


    INNER JOIN  LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP                         CAL
    ON          CALENDAR_DATE = SEPAS_STLMNT_DTE 
    --AND  REPORTING_DATE = (SELECT MAX(CALENDAR_DATE) FROM LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP)
    AND REPORTING_DATE BETWEEN '2024-05-10' AND '2024-05-12'
        

    WHERE OPROC_PROC_SEQNO = 1
) B

WHERE METRIC_NAME IS NOT NULL
GROUP BY 1,2,3,4,5,6,7


UNION ALL 

SELECT

    DISTINCT REPORTING_DATE
    ,WEEK_OF_YEAR
    ,CALENDAR_MTH
    ,CALENDAR_QUARTER
    ,CALENDAR_YEAR
    ,'SEPA PAYMENTS' AS METRIC_TYPE

    ,CASE 
        WHEN CLASSTYPE = 'INBOUND'  AND OPROC_TRAN_TYPE = 'CDT' THEN 'VALUE OF INCOMING CREDITS'
        WHEN CLASSTYPE = 'OUTBOUND' AND OPROC_TRAN_TYPE = 'CDT' THEN 'VALUE OF OUTGOING CREDITS'
        WHEN CLASSTYPE = 'INBOUND'  AND OPROC_TRAN_TYPE = 'DBT' THEN 'VALUE OF INCOMING DEBITS'
        WHEN CLASSTYPE = 'OUTBOUND' AND OPROC_TRAN_TYPE = 'DBT' THEN 'VALUE OF OUTGOING DEBITS'
        
    END AS METRIC_NAME
    
    ,Cast('?' AS VARCHAR (120)) AS TP2_BUSIEST_HOURS
        
    ,Sum(OPROC_AMOUNT) AS METRIC_NUM

    FROM 

    (

    SELECT
     CAL.CALENDAR_DATE AS REPORTING_DATE
    ,WEEK_OF_YEAR
    ,CALENDAR_MTH
    ,CALENDAR_QUARTER
    ,CALENDAR_YEAR
    ,OPROC_TRAN_TYPE
    ,OPROC_SEPA_TYPE
    ,OPROC_AMOUNT
    ,OPROC_SEPA_DATE
    ,OPROC_PROCDATE
    ,SEPAS_STLMNT_DTE
        ,CASE
            WHEN OPROC_SEPA_TYPE = 'ICTFR' 
                THEN 'INBOUND'
            WHEN OPROC_SEPA_TYPE = 'ISCCT' 
                THEN 'INTERNAL'
            WHEN OPROC_SEPA_TYPE = 'OBPAY' 
                THEN 'OUTBOUND'
            WHEN OPROC_SEPA_TYPE = 'OEXCT' 
                THEN 'OUTBOUND'
            WHEN OPROC_SEPA_TYPE = 'OSCCT' 
                THEN 'OUTBOUND'
            WHEN OPROC_SEPA_TYPE = 'OSOCT' 
                THEN 'OUTBOUND'
            WHEN OPROC_SEPA_TYPE = 'IDSDD' 
                THEN 'INBOUND'
            WHEN OPROC_SEPA_TYPE = 'ISCDD' 
                THEN 'INTERNAL'
            WHEN OPROC_SEPA_TYPE = 'OSCDD' 
                THEN 'OUTBOUND'
            ELSE 'UNKNOWN' 
        END AS CLASSTYPE

    FROM        DWP00V_UNIBANKS_ODS_CURRENT.OPROC   T1

    INNER JOIN  DWP00V_UNIBANKS_ODS_CURRENT.SEPAS   T2
    ON T1.OPROC_SEPA_DATE = T2.SEPAS_SEPA_DATE
    AND T1.OPROC_SEPA_TYPE = T2.SEPAS_SEPA_TYPE 
    AND T1.OPROC_SEPA_SEQNO = T2.SEPAS_SEPA_SEQNO


    INNER JOIN  LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP                         CAL
    ON          CALENDAR_DATE = SEPAS_STLMNT_DTE 
    --AND  REPORTING_DATE  = (SELECT MAX(CALENDAR_DATE) FROM LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP)
        AND REPORTING_DATE BETWEEN '2024-05-10' AND '2024-05-12'

    WHERE OPROC_PROC_SEQNO = 1

    ) B

WHERE METRIC_NAME IS NOT NULL

GROUP BY 1,2,3,4,5,6,7
    
    ;

    
    /********************************************************************************
                        STEP THREE: DROP TABLE STAPEMENTS 
    *********************************************************************************/
    
    DROP TABLE LAB_T_ORION_REPORTING_DEV.CALENDAR_TEMP ;

