--Part 1: Calculate the Final Multiplier by using Procedure LAB_NAME.FinalMultiplier
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
/*
--Step 1 
Upload input file received from business stakeholders, the input file requires 4 points of information to be able to run the TVM calculator. 

The 4 data points we need from the business are:
-- (Acct_number), account number 
-- (Date_From), Unpaid Date/Error Date this is the date in which TVM is to be applied from
-- (Date_To), cut off date/Remediation Date, this is the date in which TVM is to be calculated up to 
-- (Amount), it is the value in which TVM is to be calcuated against 
-- (RNumber) we insert a 5th datapoint of which we derive ourselves this is derived by recording a sequence from number 1 to the last line 

Start by dropping the previous run of the TVM input and create a new table as your base to input datapoints. 
*/
----------------------------------------------------------------------------------------------
DROP TABLE LAB_NAME.TVM_Input;
CREATE TABLE LAB_NAME.TVM_Input(
Acct_number VARCHAR(20),
Date_From DATE,              --Unpaid Date/Error Date
Date_To DATE,                --Remediation Date
Amount DECIMAL(14,6),
RNumber INT                  --row 1 -> 1, row 2 -> 2 ....how many row, then we have the same number rank number.
);
----------------------------------------------------------------------------------------------
/* 
step 2 
insert the data from the business and the 5th field we have derived into the warehouse. 
note - the Date_From cannot be after the Date_To. The dates must be recorded as yyyy-mm-dd. 
*/

INSERT INTO LAB_NAME.TVM_Input 
VALUES(?,?,?,?,?);

SELECT	* 
FROM	LAB_NAME.TVM_Input 
ORDER BY Date_From;

--------------------------------------------------------------------------------------------------
--Step 3:
--Obtain the start date and the end date, you need the 2 parameters in the procedure FinalMultiplier.
SELECT	DISTINCT Date_From, Date_To 
FROM	LAB_NAME.TVM_Input 
WHERE	(Date_From IN (
	SELECT	Min(Date_From) 
	FROM	LAB_NAME.TVM_Input));
	
/*
At this point we have enough data to run the TVM calculator against the input. 
Start by dropping the previous table (run) and creating a new base table for the current run to populate against. 
----------------------------------------------------------------------------------------------
Step 4:
start by dropping the previous run of the Final Multiplier output,
and create a new table as the base before you calculate the fianl multiplier with the new remediation date

LAB_NAME.test is used to store the output results of the procedure LAB_NAME.FinalMultiplier when it be call
*/

--DROP TABLE LAB_NAME.test;
CREATE TABLE LAB_NAME.test(
TVM_DATE DATE, 	
Compound VARCHAR(14),
Accrual_Basis INT, 	
YearlyRate DECIMAL(11,4), 	
Base_Multiplier DECIMAL(38,11), 	
Daily_VALUE DECIMAL(38,11), 	
FINAL_Multiplier DECIMAL(38,11)
);

----------------------------------------------------------------------------------------------	
--Step 5:
--Input the 2 date you obtained from last step as the parameters
CALL LAB_NAME.FinalMultiplier('2015-06-26','2023-03-31');
--Note: TABLE LAB_NAME.Paid_Off_TVM_Rates need TO UPDATE every YEAR once the YEAR rate OF the NEW YEAR released. 
-------In procedure， LAB_NAME.FinalMultiplier()， we use the LAB_NAME.Paid_Off_TVM_Rates table.

--Check the output 
SELECT	* FROM	LAB_NAME.test ORDER BY TVM_Date DESC;

----------------------------------------------------------------------------------------------	
/*
Step 6:
--Copy Final Multiplier output table to one new table, name it with the name of CIE

For the new CIE case with different Date_To, we should run the procedure again with the new paramater

NOTE:
--Please change the table name according to your CIE case, do not overwrite  it
--Otherwise, WHEN others calculate their CIE CASE, the TABLE will NOT exist
*/

CREATE TABLE LAB_NAME.TVM_Multiplier_CIE999 AS LAB_NAME.test WITH DATA;  ---2003/1/1-2023/3/31


-----------------------------------------------------------------------------------------------------
--Part 2: Calculate the Total Redress Amount by using Procedure LAB_NAME.TVM_Calculator
--based ON the INPUT TABLE AND the FINAL Multiplier TABLE you obtained
-----------------------------------------------------------------------------------------------------

/*
Step 7： obtain the parameter for LAB_NAME.TVM_Calculator
It will tell the procedure how many time it should calculate.
*/

SELECT	Max(RNumber) FROM LAB_NAME.TVM_Input;

---------------------------------------------------------------------------------------------------	
/*
Step 8:
start by dropping the previous run of the TVM output and create a new table as your base to input datapoints. 

--Before you call the procedure LAB_NAME.TVM_Calculator, clean the output table first
*/

--DROP TABLE LAB_NAME.TVM_Output;
CREATE TABLE LAB_NAME.TVM_Output(
Acct_number VARCHAR(20),		          
Date_From DATE,      
Date_To DATE,
Amount DECIMAL(11,2),
TVM_Multiplier DECIMAL(14,6),
TVM_Compo_Monthly DECIMAL(14,2),
Total_Redress_Amount DECIMAL(14,2)
);

----------------------------------------------------------------------------------------------------	
--Step 9: input the parameter into the procedure, then call it
/*
Note: Before you call it, replace the final multiplier in the procedure first
FOR example:
1. Select LAB_NAME, then click the Procedure, open the LAB_NAME.TVM_Calculator
2. 'Ctrl + H' to REPLACE'LAB_NAME.TVM_Multiplier20230123' TO 'LAB_NAME.TVM_Multiplier_CIE999'
    --Table LAB_NAME.TVM_Multiplier20230123 only wroks for '2003-01-01' to'2023-03-31'
3. Replace the whole procedure (Click EXECUTE!!!PLEASE)
4. Now you can call the Procedure
*/
CALL LAB_NAME.TVM_Calculator(66);

SELECT	* FROM	LAB_NAME.TVM_Output ORDER BY Date_From;

----------------------------------------------------------------------------------------------------	
--Step 10: Copy the TVM output table to datebase
--so NEXT TIME you still can CHECK your CIE CASE WITHOUT overwrite bother
CREATE TABLE LAB_NAME.TVM_Cal_CIE999 AS LAB_NAME.TVM_Output WITH DATA;  

--This is the example output result.
--SELECT	*  FROM LAB_NAME.TVM_Cal_CIE999 ORDER BY Acct_number, Date_From;
